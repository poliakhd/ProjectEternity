<Page
    x:Class="ProjectEternity.App.Views.LibraryPageView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:micro="using:Caliburn.Micro"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:models="using:ProjectEternity.App.Models"
    xmlns:behaviors="using:ProjectEternity.App.Core.Behaviors"
    mc:Ignorable="d" x:Name="Page">

    <Page.Resources>
        <DataTemplate x:Key="BookLibraryTemplate" x:DataType="models:Book">
            <Grid x:Name="RecentBookGrid">
                <interactivity:Interaction.Behaviors>
                    <behaviors:OpenAttachedFlyoutMenu />
                </interactivity:Interaction.Behaviors>

                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem micro:Action.TargetWithoutContext="{Binding Path=DataContext,
                                                                                ElementName=Page}"
                                    micro:Message.Attach="[Event Click] = [SelectionMode()]"
                                    Text="Select" />
                        <MenuFlyoutItem micro:Action.TargetWithoutContext="{Binding Path=DataContext,
                                                                                ElementName=Page}"
                                    micro:Message.Attach="[Event Click] = [DeleteBooks()]"
                                    Text="Delete" />
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Image Grid.Row="0"
                   Grid.RowSpan="3"
                   Source="{x:Bind Path=CoverImage}"
                   Stretch="UniformToFill" />

                <Grid Grid.Row="2" Padding="1">
                    <Grid.Background>
                        <SolidColorBrush Opacity="0.6" Color="Black" />
                    </Grid.Background>

                    <TextBlock VerticalAlignment="Bottom"
                           FontSize="13"
                           FontWeight="SemiLight"
                           Foreground="White"
                           Text="{x:Bind Path=Title}"
                           TextWrapping="WrapWholeWords" />
                </Grid>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="15,15,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" VerticalAlignment="Center" Foreground="Black" Text="LIBRARY" FontSize="17" FontWeight="Bold" />
            <ComboBox Grid.Column="1" Margin="10,5,5,5"/>
        </Grid>

        <controls:AdaptiveGridView Margin="5" Grid.Row="1" x:Name="RecentGrid"
                                           HorizontalContentAlignment="Left"
                                           micro:Message.Attach="[Event ItemClick] = [OpenBook($eventArgs)]"
                                           IsItemClickEnabled="{Binding Path=BooksClickEnabled,
                                                                        Mode=TwoWay,
                                                                        UpdateSourceTrigger=PropertyChanged}"
                                           ItemTemplate="{StaticResource BookLibraryTemplate}"
                                           ItemsSource="{Binding Path=RecentBooks}"
                                           SelectedItem="{Binding Path=SelectedBook,
                                                                  Mode=TwoWay,
                                                                  UpdateSourceTrigger=PropertyChanged}"
                                           SelectionMode="{Binding Path=BooksSelectionMode,
                                                                   UpdateSourceTrigger=PropertyChanged,
                                                                   Mode=TwoWay}"
                                           StretchContentForSingleRow="False">
            <interactivity:Interaction.Behaviors>
                <behaviors:BindableSelectedItems SelectedItems="{Binding Path=SelectedBooks, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </interactivity:Interaction.Behaviors>
        </controls:AdaptiveGridView>

        <CommandBar Grid.Row="2"
                    ClosedDisplayMode="Minimal"
                    IsSticky="True"
                    Visibility="{Binding BookCommandBarVisibility,
                                         UpdateSourceTrigger=PropertyChanged}">
            <CommandBar.PrimaryCommands>
                <AppBarButton micro:Message.Attach="[Event Click] = [AddBook()]"
                              Icon="Add"
                              IsCompact="True"
                              Label="Add book" />
                <AppBarButton micro:Message.Attach="[Event Click] = [AddBooks()]"
                              Icon="Add"
                              IsCompact="True"
                              Label="Add books" />
            </CommandBar.PrimaryCommands>
        </CommandBar>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RecentGrid.DesiredWidth" Value="200" />
                        <Setter Target="RecentGrid.ItemHeight" Value="300" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RecentGrid.DesiredWidth" Value="160" />
                        <Setter Target="RecentGrid.ItemHeight" Value="210" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
